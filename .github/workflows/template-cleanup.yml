# GitHub Actions Workflow responsible for cleaning up the IntelliJ Platform Plugin Template repository from the template-specific files and configurations.
# This workflow is supposed to be triggered automatically when a new template-based repository has been created.

name: Template Cleanup
on:
  push:
    branches: [main]

jobs:

  # Run a cleaning process only if the workflow is triggered by the non-"intellij-platform-plugin-template" repository.
  template-cleanup:
    name: Template Cleanup
    runs-on: ubuntu-latest
    if: github.event.repository.name != 'rider-plugin-template'
    permissions:
      contents: write
    # This is needed to cancel Build when template-cleanup is running
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Install cleanup tools
      - name: Install tools
        run: sudo apt install rename

      # Cleanup project
      - name: Cleanup
        run: |
          export LC_CTYPE=C
          export LANG=C

          # Prepare variables
          NAME="${GITHUB_REPOSITORY##*/}"
          ACTOR=$(echo $GITHUB_ACTOR | tr '[:upper:]' '[:lower:]')
          SAFE_NAME=$(echo $NAME | sed 's/[^a-zA-Z0-9]//g' | tr '[:upper:]' '[:lower:]')
          SAFE_ACTOR=$(echo $ACTOR | sed 's/[^a-zA-Z0-9]//g' | tr '[:upper:]' '[:lower:]')
          GROUP="com.github.$SAFE_ACTOR.$SAFE_NAME"
          DOTNET_NAME=$(echo $NAME \
            | sed 's/[^a-zA-Z0-9]/_/g' \
            | tr '[:upper:]' '[:lower:]' \
            | sed 's/[_]/./g'  \
            | awk 'BEGIN{FS=OFS="."} {for (i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2); print}')
          DOTNET_NAMESPACE="$DOTNET_NAME"

          # Replace placeholders in the template-cleanup files
          sed -i "s/%NAME%/$NAME/g" .github/template-cleanup/*
          sed -i "s/%REPOSITORY%/${GITHUB_REPOSITORY/\//\\/}/g" .github/template-cleanup/*
          sed -i "s/%GROUP%/$GROUP/g" .github/template-cleanup/*
          sed -i "s/%DOTNET_NAMESPACE%/$DOTNET_NAMESPACE/g" .github/template-cleanup/*

          # Replace template package name in project files with $GROUP
          find src -type f -exec sed -i "s/org.jetbrains.plugins.template/$GROUP/g" {} +
          find src -type f -exec sed -i "s/IntelliJ Platform Plugin Template/$NAME/g" {} +
          find src -type f -exec sed -i "s/JetBrains/$ACTOR/g" {} +

          # Replace .NET stuff
          # Replace in file contents
          find src -type f -exec sed -i "s/Rider.Plugins.Template/$DOTNET_NAMESPACE/g" {} +
       
          # Replace in directory names
          find src -depth -type d -name '*Rider.Plugins.Template*' -execdir rename "s/Rider.Plugins.Template/$DOTNET_NAMESPACE/g" {} +
       
          # Replace in file names
          find src -type f -name '*Rider.Plugins.Template*' -exec rename "s/Rider.Plugins.Template/$DOTNET_NAMESPACE/g" {} +

          # Move content
          mkdir -p src/main/kotlin/${GROUP//.//}
          mkdir -p src/dotnet/$DOTNET_NAMESPACE
          mkdir -p src/dotnet/$DOTNET_NAMESPACE.Tests
          mkdir -p src/test/kotlin/${GROUP//.//}
          mkdir -p testData/${GROUP//.//}
          cp -R .github/template-cleanup/. .
          cp -R src/main/kotlin/org/jetbrains/plugins/template/* src/main/kotlin/${GROUP//.//}/
          cp -R src/test/kotlin/org/jetbrains/plugins/template/* src/test/kotlin/${GROUP//.//}/
          cp -R testData/org/jetbrains/plugins/template/* testData/${GROUP//.//}/

          # Cleanup
          rm -rf \
            .github/ISSUE_TEMPLATE \
            .github/readme \
            .github/template-cleanup \
            .github/workflows/template-sync-fork.yml \
            .github/workflows/template-cleanup.yml \
            .github/workflows/template-verify.yml \
            .idea/icon.png \
            src/main/kotlin/org \
            src/test/kotlin/org \
            testData/org/jetbrains/plugins/template \
            src/main/resources/META-INF/pluginIcon.svg \
            CODE_OF_CONDUCT.md \
            LICENSE

      # Commit modified files
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Template cleanup"

      # Push changes
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}
